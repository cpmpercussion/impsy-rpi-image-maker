---

- name: Install and configure IMPSy
  hosts: impsypi
  
  vars:

    impsy_loc: "impsy"

  tasks:

  - name: apt update and upgrade
    become: true
    apt:
      update_cache: true
      cache_valid_time: 3600
      upgrade: dist
    tags:
     - packages

  - name: Install packages
    become: true
    apt:
      pkg:
        - libhdf5-dev
        - unzip
        - pkg-config
        - python3-pip
        - cmake
        - make
        - git
        - python-is-python3
        - wget
        - patchelf
        - pipx
    tags:
     - packages

  - name: apt clean
    become: true
    apt:
      clean: true 
    tags:
     - packages

  - name: Install Poetry
    # become: true
    community.general.pipx: 
      name: poetry 
    tags:
     - packages

  - name: Git checkout IMPSY
    ansible.builtin.git:
      repo: 'https://github.com/cpmpercussion/impsy.git'
      dest: '{{ ansible_env.HOME }}/{{ impsy_loc }}'
      version: main
    tags:
      - setup

  - name: Poetry Install IMPSY
    command: poetry install --sync
    args:
      chdir: '{{ ansible_env.HOME }}/{{ impsy_loc }}'
    environment: 
      PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring
      PATH: '{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/.local/bin'
    tags:
      - setup

  - name: Clean out Poetry cache
    command: poetry cache clear --all --no-interaction .
    args:
      chdir: '{{ ansible_env.HOME }}/{{ impsy_loc }}'
    environment: 
      PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring
      PATH: '{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/.local/bin'
    tags:
      - setup

  - name: Poetry test run IMPSY
    command: poetry run ./start_impsy.py test-mdrnn
    args:
      chdir: '{{ ansible_env.HOME }}/{{ impsy_loc }}'
    environment:
      PATH: '{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/.local/bin'
    tags:
      - setup

  - name: Create IMPSY-run service
    become: true
    template:
      src: templates/impsy-run.service.j2
      dest: /etc/systemd/system/impsy-run.service
    tags:
      - startup

  - name: Create IMPSY-web service
    become: true
    template:
      src: templates/impsy-web.service.j2
      dest: /etc/systemd/system/impsy-web.service
    tags:
      - startup

  - name: Start IMPSY-web service
    become: true
    systemd:
      name: impsy-web.service
      daemon_reload: true
      state: started
      enabled: true
    tags:
      - startup

  - name: Start IMPSY-run service
    become: true
    systemd:
      name: impsy-run.service
      state: started
      enabled: true
    tags:
      - startup

  - name: "Setup Ethernet gadget network interface according to: https://forums.raspberrypi.com/viewtopic.php?p=2184846"
    become: true
    template:
      src: templates/g_ether.j2
      dest: /etc/network/interfaces.d/g_ether
    tags:
      - startup

  - name: Enable dwc2 in /boot/firmware/config.txt
    become: true
    lineinfile:
      path: /boot/firmware/config.txt
      line: 'dtoverlay=dwc2'
      insertafter: '[all]'
    tags:
      - startup

# Replaces the cmdline.txt line by checking for the "rootwait" at the end. Negative lookahead to not replace if modules-load line is already there.

  - name: Ensure modules-load=dwc2,g_ether at end of /boot/firmware/cmdline.txt
    become: true
    lineinfile: 
      dest: /boot/firmware/cmdline.txt
      backrefs: true
      state: present
      regexp: '(.*rootwait(?!\s+modules-load=dwc2,g_ether))'
      line: '\1 modules-load=dwc2,g_ether'
    tags:
      - startup
